# Set the default build type to Release
ARG cmake_build_type=Release

# Base image for the build
ARG base_image=ubuntu:24.04

#-------------------------------BUILDER--------------------------------
# Start with the base image
FROM --platform=linux/arm64 ${base_image} AS builder

# Renew the ARGs
ARG cmake_build_type

# Environment settings
ENV LANG en_US.utf8
ENV LANGUAGE=en_US
ENV DEBIAN_FRONTEND=noninteractive
ENV CMAKE_BUILD_TYPE=${cmake_build_type}

# Enable ARM64 architecture and update package lists
RUN dpkg --add-architecture arm64 && apt-get update -y

# Install necessary tools to create users and groups
RUN apt-get install -y adduser \
    && apt-cache search clang-tools

# Configure dpkg to skip systemd post-installation scripts
RUN mkdir -p /etc/systemd/system && \
    echo "exit 0" > /usr/sbin/policy-rc.d && chmod +x /usr/sbin/policy-rc.d && \
    apt-get install -y --no-install-recommends \
    gcc-arm*

RUN apt-get install -y --no-install-recommends \
    python3.12-dev \
    python3.12-venv \
    python3-pip \
    libsdl2-dev \
    freeglut3-dev \
    libopenal-dev \
    make \
    curl \
    rsync \
    clang-format \
    cmake \
    libvorbis-dev \
# testing
    
    
    clang-tools \
    && rm /usr/sbin/policy-rc.d

# Copy source code
COPY ./ /home/ubuntu/ballistica

# Set the working directory
WORKDIR /home/ubuntu/ballistica

# Compile the application
RUN make cmake-server-build && \
    mkdir ./../ballistica_cmake_server && \
    mv build/cmake/* ./../ballistica_cmake_server

#-------------------------------RUNNER--------------------------------
# Create a new stage for the runtime environment using ARM64 base image
FROM --platform=linux/arm64 ${base_image}

# Environment settings
ENV LANG en_US.utf8
ENV LANGUAGE=en_US
ENV DEBIAN_FRONTEND=noninteractive

# Renew the ARGs
ARG cmake_build_type
LABEL BOMBSQUAD_BUILD_TYPE=${cmake_build_type}

# Install necessary tools to create users and groups
RUN apt-get update -y && apt-get install -y adduser

# Pre-create necessary users and groups to avoid systemd configuration errors
RUN addgroup --system systemd-journal && \
    adduser --system --no-create-home --ingroup systemd-journal systemd-network

# Configure dpkg to skip systemd post-installation scripts
RUN mkdir -p /etc/systemd/system && \
    echo "exit 0" > /usr/sbin/policy-rc.d && chmod +x /usr/sbin/policy-rc.d && \
    apt-get update -y && \
    apt-get install -y python3.12-dev && \
    rm -rf /var/lib/apt/lists/* && \
    python3.12 -c "import uuid;print(uuid.uuid4())" > /etc/machine-id && \
    rm /usr/sbin/policy-rc.d

# Copy the compiled application from the builder stage
COPY --from=builder /home/ubuntu/ballistica_cmake_server/*/staged /home/ubuntu/ballistica
# ballisticakit_headless in staged is a symlink
COPY --from=builder /home/ubuntu/ballistica_cmake_server/*/ballisticakit_headless /home/ubuntu/ballistica/dist

# Set the working directory
WORKDIR /home/ubuntu/ballistica

# Expose the necessary port
EXPOSE 43210/udp

# Set the default command to run the application
CMD ["./ballisticakit_server"]
