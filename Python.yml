Hogar
Saltar al final
 
Vishal edit√≥ esta p√°ginael 16 de octubre de 2024 ¬∑ 127 revisiones
¬°Bienvenido a Ballistica Wiki!
Intentar√© mantener este sitio bastante libre y abierto al p√∫blico, as√≠ que si√©ntete libre de agregar tus propios documentos aqu√≠ o mejorar los existentes. Veremos c√≥mo resulta. Lo cambiar√© a privado si se abusa de √©l, as√≠ que no seas esa persona.

Si eres nuevo en Ballistica, consulta el archivo README para obtener una introducci√≥n. De lo contrario, est√°s en el lugar correcto.

Noticias:
Python 3.12 y la magia de venv
23 de abril de 2024

Como parte de la pr√≥xima actualizaci√≥n 1.7.34, el proyecto se ha actualizado oficialmente para usar Python 3.12 . Cualquiera que haya estado en el proyecto durante un tiempo sabe lo que hay que hacer: aseg√∫rese de tener un python3.12disponible en su ruta/etc. y deber√≠a poder compilar la √∫ltima versi√≥n. Es posible que deba hacer un make cleano clonar el repositorio si tiene problemas.

Sin embargo, una cosa que no tendr√°s que hacer esta vez es reinstalar un mont√≥n de paquetes Pip. Una caracter√≠stica divertida que agregu√© para que coincida con la actualizaci√≥n de Python 3.12 es un entorno virtual Python administrado por el proyecto. Esto significa que el proyecto ya no te molestar√° para que instales un mont√≥n de cosas de Pip como mypy, pylint, etc. Ahora simplemente lo hace por s√≠ mismo y lo mantiene envuelto en su propio peque√±o entorno virtual privado (en .venvcaso de que tengas curiosidad). Esto deber√≠a facilitar la puesta en marcha y hacer que las cosas sean m√°s consistentes para las personas.

Lanzamiento de la versi√≥n 1.7.20 (¬°Modders, tomen nota!)
22 de junio de 2023

La actualizaci√≥n 1.7.20 de BombSquad se est√° implementando para todos los usuarios de Google Play a partir de hoy. Aunque el n√∫mero de versi√≥n hace que parezca una actualizaci√≥n menor, contiene algunos cambios muy importantes que forman la base de las caracter√≠sticas que vienen en la versi√≥n 1.8. Si has escrito mods, tendr√°s que actualizarlos, ya que la versi√≥n de la API ha pasado de la 7 a la 8.

B√°sicamente, la versi√≥n 1.7.20 divide el juego/motor en "conjuntos de caracter√≠sticas" con versiones independientes. Esto significa que si est√°s escribiendo c√≥digo de juego, obtendr√°s las cosas que necesitas de un paquete "bascenev1" (Ballistica Scene Version 1), o si est√°s escribiendo c√≥digo de interfaz de usuario, puedes usar "bauiv1" (Ballistica User Interface Version 1). Anteriormente, todo esto se encontraba en el m√≥dulo "ba".

B√°sicamente, para actualizar mods, tendr√°s que reemplazar el uso de 'ba' o 'bastd' por los paquetes de nuevos conjuntos de caracter√≠sticas. S√≠, esto es molesto, pero la ventaja es que una vez que las cosas est√©n usando el nuevo sistema, deber√≠a ser m√°s f√°cil evitar que se rompan en el futuro, ya que podemos agregar nuevos conjuntos de caracter√≠sticas como 'bascenev2' para hacer evolucionar la API hacia adelante mientras dejamos intactas las API m√°s antiguas. Para ver un ejemplo de actualizaci√≥n de un script de juego de la API 7 a la 8, mira esta demostraci√≥n en un episodio reciente de 'Coffee With Eric'. Tambi√©n revisa el registro de cambios y √∫nete al Discord de Ballistica si tienes alguna pregunta o encuentras alg√∫n error.

Hay muchas m√°s mejoras de arquitectura en esta actualizaci√≥n, incluidos los "modos de aplicaci√≥n", el sistema de proyectos "Spinoff" y una actualizaci√≥n a Python 3.11. Est√©n atentos para obtener m√°s detalles sobre todo esto... ¬°ahora avanzamos hacia la versi√≥n 1.8!

El negro es el nuevo Yapf
10 de octubre de 2022

Me encanta el formato autom√°tico . Ballistica ha estado usando yapf para formatear su c√≥digo Python durante a√±os y, en general, ha funcionado bien. Sin embargo, ayer descubr√≠ que yapf se bloquea en la nueva declaraci√≥n de coincidencia en Python 3.10 con la que estaba experimentando por primera vez. Esto me desconcert√≥, ya que Python 3.10 ya ha estado disponible durante casi un a√±o, lo que es tiempo suficiente para que las herramientas adopten nuevas caracter√≠sticas, y me llev√≥ a investigar el estado de los formateadores autom√°ticos de Python. Despu√©s de investigar un poco, parece que el proyecto yapf est√° en gran parte inactivo y algunos podr√≠an decir que est√° muriendo, mientras que black se ve extremadamente animado y saludable. Hab√≠a analizado black cuando estaba configurando originalmente el formato autom√°tico, pero me decid√≠ por yapf debido a su gran conjunto de opciones de estilo en comparaci√≥n con la falta "absoluta" de black. Pero al mirarlo ahora de nuevo, encuentro que el estilo de Black es bastante aceptable y se siente m√°s "curado por humanos" y consistente en comparaci√≥n con los algoritmos m√°s difusos de Yapf, que generalmente se ven geniales pero ocasionalmente arrojan resultados desconcertantemente feos.

Ahora utilizaremos el color negro, pero con algunas salvedades:

Vamos a utilizar longitudes de l√≠nea de 80 caracteres. El valor predeterminado para el negro es 88, pero como queremos que sea lo m√°s utilizable posible en dispositivos m√≥viles con pantallas peque√±as, nos quedaremos con 80, que tambi√©n es un est√°ndar muy utilizado. Tenga en cuenta que, en realidad, estoy aumentando este valor desde los 79 que est√°bamos utilizando antes y que es recomendado por Pep-8, pero creo que la motivaci√≥n de Pep-8 para 79 en lugar de 80 (los editores muestran glifos de marcadores en la √∫ltima columna) no es algo muy com√∫n, as√≠ que derrochemos y usemos los 80 completos.
Tambi√©n estoy desactivando la "normalizaci√≥n de cadenas" de Black, que convierte todas las comillas simples en dobles. No estoy listo para deshacerme de las comillas simples; personalmente, las encuentro m√°s elegantes y legibles. Tal vez lo reconsidere m√°s adelante.
Para usar el nuevo formato, no deber√≠as necesitar hacer nada m√°s que asegurarte de que est√© instalado el formato negro. ( pip install black). Los objetivos de compilaci√≥n de Ballistica deber√≠an molestarte si no lo est√°. Luego, simplemente ejecuta las cosas est√°ndar como make formato make preflight. Tambi√©n puedes usar efrotools.code.format_python_str()para ejecutar expl√≠citamente alg√∫n c√≥digo a trav√©s del formato con nuestra configuraci√≥n o efrotools.code.black_base_args()para obtener los argumentos de la l√≠nea de comandos que usamos para invocar la herramienta.

Ahora volvamos a probar esa matchafirmaci√≥n...

Consola en la nube
18 de septiembre de 2022

La actualizaci√≥n 1.7.7 ya est√° comenzando a implementarse y agrega soporte para la nueva p√°gina de dispositivos ballistica.net ; espec√≠ficamente la funci√≥n de consola. Esto te permite ver la salida de la aplicaci√≥n y ejecutar comandos en cualquier dispositivo en el que hayas iniciado sesi√≥n con tu cuenta V2. Esto deber√≠a ser de gran ayuda para los modders que usan tel√©fonos u otros dispositivos donde puede ser dif√≠cil acceder a los registros del dispositivo/aplicaci√≥n de otra manera. Tambi√©n puede ser de utilidad para todos los modders, ya que te permite escribir c√≥digo de prueba de varias l√≠neas y ejecutarlo f√°cilmente de manera repetida despu√©s de reiniciar la aplicaci√≥n. Cuando se combina con espacios de trabajo , esto deber√≠a comenzar a permitir una modificaci√≥n bastante efectiva usando nada m√°s que un navegador web. A continuaci√≥n, planeo habilitar las funciones de la cuenta V2 para Google Play y otros tipos de cuentas ampliamente utilizados y luego planeo escribir algunos tutoriales de modders que usen estas herramientas. Mantente atento.

Servidor de Discord
4 de agosto de 2022

He recibido muchas solicitudes para esto, as√≠ que por fin hay un servidor oficial de Discord de BombSquad/Ballistica . Muchos modders y miembros de la comunidad ya se han unido y participar√© peri√≥dicamente (incluso en el horario de oficina semanal programado), por lo que es un gran recurso para hacer preguntas o compartir cosas divertidas que hayas creado.

¬°¬°¬°BombSquad 1.7 ya est√° aqu√≠!!!
13 de julio de 2022

üöÄ ¬°All√° vamos! (ver la discusi√≥n )

Espacios de trabajo
1 de julio de 2022

La nueva funcionalidad de los espacios de trabajo de la versi√≥n 1.7 ya est√° disponible. Esto incluye tanto la interfaz de edici√≥n web sencilla como la herramienta de l√≠nea de comandos de bacloud para interactuar con ellos desde una computadora. No dude en avisarnos si tiene alg√∫n problema o desea hacer alg√∫n comentario. Mi pr√≥xima prioridad ser√° publicar las compilaciones de la versi√≥n 1.7 en Google Play, etc., para que la gente no tenga que descargar compilaciones de prueba para jugar con estas cosas.

Documentaci√≥n de espacios de trabajo

Python 3.10
1 de junio de 2022

Para acompa√±ar el inminente lanzamiento de la versi√≥n 1.7, Ballistica se ha actualizado de Python 3.9 a 3.10. Esto significa que estamos usando la √∫ltima y mejor versi√≥n disponible. Tambi√©n he mejorado mi canal de back-end para que dependa menos de las versiones Python del sistema operativo, lo que significa que somos libres de actualizar la versi√≥n Python de Ballistica anualmente en sincron√≠a con Python en s√≠ mismo en lugar de esperar actualizaciones de Ubuntu LTS o lo que sea (aunque espero que todav√≠a esperemos unos meses despu√©s de los nuevos lanzamientos de Python para permitir que el soporte de las herramientas madure, etc.).

En consecuencia, actualizar√© la secci√≥n de introducci√≥n con m√°s informaci√≥n sobre la instalaci√≥n de versiones de Python distintas a las que vienen con el sistema operativo. Por ejemplo, Homebrew para Mac todav√≠a instala Python 3.9 de forma predeterminada, pero necesitar√°s instalar 3.10 para compilar el material de Ballistica.

Aqu√≠ est√° la lista de novedades de Python 3.10. No hay nada que nos resulte demasiado relevante, pero hay algunas cosas con las que podr√≠a ser divertido jugar. Originalmente, la versi√≥n 3.10 habr√≠a significado que podr√≠amos eliminar todas las from __future__ import annotationsl√≠neas, pero ese cambio se ha pospuesto .

En el lado de la verificaci√≥n de tipos, aqu√≠ hay una mejora de sintaxis agradable: typing.Optionaly typing.Unionya no son necesarios.

En lugar de un c√≥digo como este:

from typing import Union, Optional
possibly_str: Optional[str] = 'HELLO' if random.random() > 0.5 else None
assert isinstance(possibly_str, (str, type(None)))
str_or_int: Union[str, int] = 'HELLO' if random.random() > 0.5 else 123
Ahora podemos hacer esto:

possibly_str: str | None = 'HELLO' if random.random() > 0.5 else None
assert isinstance(possibly_str, str | None)
str_or_int: str | int = 'HELLO' if random.random() > 0.5 else 123
Por favor, avise o env√≠e correcciones si encuentra algo roto, documentos desactualizados, etc.

Python 3.9
23 de octubre de 2021

Ballistica/Bombsquad 1.6.5 se ha actualizado de Python 3.8 a 3.9. Voy a cambiar a una Mac basada en Arm como mi m√°quina de desarrollo principal, y 3.9 es la primera versi√≥n oficialmente compatible all√≠, por lo que parec√≠a un buen momento para actualizar. 3.10 acaba de lanzarse, pero a√∫n no est√° ampliamente disponible, as√≠ que llegaremos a ella m√°s adelante en su ciclo de vida.

Python 3.9 deber√≠a ser relativamente f√°cil de instalar en la mayor√≠a de las plataformas; en Ubuntu 20 (incluido WSL en Windows) s√≠ sudo apt update; sudo apt install python3.9-dev, y en las configuraciones homebrew de Mac s√≠ brew install python@3.9. Consulta la secci√≥n de introducci√≥n para obtener m√°s detalles.

Estas son las novedades de Python 3.9. Para nosotros, la mejora m√°s notable ser√° la simplificaci√≥n de las anotaciones de tipos en muchos casos; ahora se pueden utilizar los objetos de tipos est√°ndar en lugar de los especiales del m√≥dulo de tipificaci√≥n.

En lugar de un c√≥digo como este:

from typing import Dict, Tuple
my_obj_vals: Dict[str, Tuple[int]] = {'obj1': (1, 2, 3)}
Ahora podemos hacer esto:

my_obj_vals: dict[str, tuple[int]] = {'obj1': (1, 2, 3)}
Por favor, avise o env√≠e correcciones si encuentra algo roto, documentos desactualizados, etc.

Compilaci√≥n en Windows
6 de junio de 2021

Durante un tiempo ha sido posible compilar la mayor parte del juego desde el c√≥digo fuente en Linux y Mac, y me complace decir que ahora tambi√©n es posible en Windows. Consulta la documentaci√≥n aqu√≠ . Si tienes alg√∫n comentario o te surge alg√∫n problema, por favor contribuye a la discusi√≥n aqu√≠ . ¬°Disfr√∫talo!

¬°Escuadr√≥n de bombas 1.6!
5 de mayo de 2021

Las versiones 1.6 de BombSquad est√°n empezando a llegar a varias plataformas (as√≠ como las versiones equivalentes de ballisticacore aqu√≠). La gran novedad es el alojamiento privado, que te permite crear un juego en un servidor en la nube y compartir un c√≥digo simple con amigos para que se unan. Esto representa el primer uso de mi nueva configuraci√≥n de alojamiento en la nube mundial en la que he estado trabajando durante muchos meses, que formar√° la base de muchas cosas divertidas en las pr√≥ximas versiones (torneos multijugador, emparejamiento, etc.). Consulta el REGISTRO DE CAMBIOS para ver la lista completa de cambios. Como siempre, ¬°av√≠sanos si tienes alg√∫n problema y disfruta!

Compatibilidad nativa con M1 para Mac
25 de noviembre de 2020

Ballistica ahora es compatible con compilaciones nativas de Arm-64 en las nuevas Mac M1 (tanto a trav√©s de los objetivos "Prefab" como compilando desde la fuente). Consulta la secci√≥n de introducci√≥n actualizada para obtener m√°s detalles. Una compilaci√≥n completa desde la fuente en una M1 demora aproximadamente 19 segundos üòé.

La capa C++ ahora es (en su mayor parte) de c√≥digo abierto
13 de octubre de 2020

Finalmente me tom√© un tiempo y logr√© subir la mayor parte del c√≥digo C++ del motor aqu√≠, por lo que ahora es posible compilar desde fuentes en lugar de usar solo binarios precompilados. Por lo tanto, si alguien desea experimentar con c√≥digo de bajo nivel, como los motores de renderizado o f√≠sica, ahora es posible. Consulte Descripci√≥n general de la capa nativa para obtener m√°s detalles.

Python 3.8
1 de agosto de 2020

Ballistica/Bombsquad 1.5.24 se ha actualizado de Python 3.7 a 3.8, que es (al momento de esta publicaci√≥n) la versi√≥n m√°s nueva disponible. Este no es un cambio tan grande como lo fue la actualizaci√≥n de 2.7 -> 3.7 (todo el c√≥digo Python que funcionaba en 3.7 deber√≠a seguir funcionando en 3.8), pero puede requerir ajustes en su entorno de desarrollo si no tiene Python 3.8 disponible actualmente, ya que las herramientas de compilaci√≥n son muy espec√≠ficas al buscar esa versi√≥n exacta. Intentar√© mantener Ballistica actualizado en general con la √∫ltima versi√≥n de Python, por lo que esta transici√≥n se realizar√° una vez cada uno o dos a√±os. Actualizar√© los documentos de "primeros pasos" y cualquier otro lugar que mencione Python 3.7, y av√≠seme si encuentra informaci√≥n desactualizada en otro lugar (o si√©ntase libre de corregirla usted mismo).

Nuevo sistema de complementos en la versi√≥n 1.5.23
23 de julio de 2020

Una solicitud com√∫n desde la versi√≥n 1.5 ha sido la capacidad de que los mods se ejecuten autom√°ticamente al iniciarse (la versi√≥n 1.4 ejecutaba todo lo que estaba en la carpeta de mods al iniciarse, pero la 1.5 no). Por eso, me complace anunciar que a partir de la versi√≥n 1.5.23 es posible nuevamente ejecutar c√≥digo al iniciarse a trav√©s del nuevo sistema de "complementos". Obtenga m√°s informaci√≥n .

Lanzamiento completo de BombSquad 1.5
Ha sido un largo proceso de correcci√≥n de errores y mejoras, pero me alegra decir que, a partir de la versi√≥n 1.5.22, he activado el interruptor para que Google Play entregue la versi√≥n 1.5.x al 100 % de los usuarios (no m√°s la versi√≥n 1.4). Contin√∫en informando sobre errores o imperfecciones y ahora podemos pasar a las cosas divertidas de la versi√≥n 1.6+...

¬°¬°¬°BombSquad 1.5 ya est√° aqu√≠!!!
Despu√©s de varias semanas de limpieza y pruebas, me complace decir que BombSquad 1.5, la primera versi√≥n del juego que utiliza este c√≥digo base de Ballistica, est√° aqu√≠.

Obtenga versiones de prueba en https://files.ballistica.net/bombsquad/builds/

Como se mencion√≥ en la hoja de ruta , el objetivo con la versi√≥n 1.5 es hacer la transici√≥n del juego existente a la nueva arquitectura. La mayor√≠a de las nuevas y emocionantes caracter√≠sticas llegar√°n en las pr√≥ximas versiones y se basar√°n en esta base. Pero por ahora, por favor, av√≠sanos si algo parece estar roto o funcionalmente diferente de lo que era en la versi√≥n 1.4. Cuanto antes podamos solucionar los errores, antes podremos pasar a las cosas divertidas...

Notas:

Actualizaci√≥n: las compilaciones de prueba gen√©ricas de Android tambi√©n est√°n disponibles ahora (a partir de la versi√≥n 1.5.6)
Ya se encuentran disponibles pruebas abiertas para la versi√≥n Android de Google Play. Para participar en las pruebas, haz clic aqu√≠ o busca la opci√≥n "Unirse a la versi√≥n beta" en la tienda Google Play.
Comenzar√© a implementarlas lentamente en Google Play, Mac App Store, etc. pronto de manera escalonada.
Estas versiones oficiales de BombSquad son b√°sicamente id√©nticas a lo que obtienes si ejecutas las compilaciones prefabricadas actuales de Ballistica desde aqu√≠. La principal diferencia es que las cosas se llaman "BombSquad" en lugar de "BallisticaCore" y los torneos deber√≠an funcionar (los puntajes de torneos enviados desde las compilaciones de BallisticaCore se rechazan).
ballistica.net ‚Ä¢ discordia ‚Ä¢ blog ‚Ä¢ soporte

P√°ginas21
Hogar

Empezando

Gu√≠a de modificaci√≥n

Contribuyendo

Hoja de ruta

Documentos de dise√±o
Principios b√°sicos de dise√±o

Documentos t√©cnicos
Espacios de trabajo

Descripci√≥n general de Python

API de Python

Descripci√≥n general de la capa nativa

Configuraci√≥n del editor

Gu√≠a de estilo de codificaci√≥n

Sistema de dependencia

Sistema de metaetiquetas

Pepitas de conocimiento

Registro de cambios

Clonar esta wiki localmente
https://github.com/efroemling/ballistica.wiki.git
